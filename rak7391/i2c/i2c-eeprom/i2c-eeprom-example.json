[
    {
        "id": "06308f478fc88158",
        "type": "tab",
        "label": "i2c-eeprom-example",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "839c60a19d7620c0",
        "type": "i2c out",
        "z": "06308f478fc88158",
        "name": "write to eeprom",
        "busno": "1",
        "address": "80",
        "command": "",
        "payload": "payload",
        "payloadType": "msg",
        "count": "3",
        "x": 600,
        "y": 180,
        "wires": [
            [
                "249c7735c178e37a"
            ]
        ]
    },
    {
        "id": "fa4f0b651340774c",
        "type": "inject",
        "z": "06308f478fc88158",
        "name": "replace the first bytes in the EEPROM to 10",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[0,0,10]",
        "payloadType": "bin",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "839c60a19d7620c0"
            ]
        ]
    },
    {
        "id": "66720931183c8175",
        "type": "inject",
        "z": "06308f478fc88158",
        "name": "replace the first bytes in the EEPROM to 100",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[0,0,100]",
        "payloadType": "bin",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "839c60a19d7620c0"
            ]
        ]
    },
    {
        "id": "87e4a1338edc2b30",
        "type": "i2c in",
        "z": "06308f478fc88158",
        "name": "read eeprom ",
        "busno": "1",
        "address": "80",
        "command": "",
        "count": "1",
        "x": 750,
        "y": 360,
        "wires": [
            [
                "7ba839993dcd25d5"
            ]
        ]
    },
    {
        "id": "7ba839993dcd25d5",
        "type": "debug",
        "z": "06308f478fc88158",
        "name": "output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 360,
        "wires": []
    },
    {
        "id": "5b91d28b4d395cc5",
        "type": "debug",
        "z": "06308f478fc88158",
        "name": "output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 180,
        "wires": []
    },
    {
        "id": "e10c7e6d7fe2d147",
        "type": "i2c out",
        "z": "06308f478fc88158",
        "name": "write the register number to eeprom",
        "busno": "1",
        "address": "80",
        "command": "",
        "payload": "payload",
        "payloadType": "msg",
        "count": "2",
        "x": 500,
        "y": 360,
        "wires": [
            [
                "87e4a1338edc2b30"
            ]
        ]
    },
    {
        "id": "50caff1f175b1bb4",
        "type": "inject",
        "z": "06308f478fc88158",
        "name": "send the register number to read",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[0,0]",
        "payloadType": "bin",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "e10c7e6d7fe2d147"
            ]
        ]
    },
    {
        "id": "249c7735c178e37a",
        "type": "function",
        "z": "06308f478fc88158",
        "name": "clean-up payload",
        "func": "msg.payload='Wrote ' + msg.payload[2] +' to eeprom registery ' + msg.payload[1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 180,
        "wires": [
            [
                "5b91d28b4d395cc5"
            ]
        ]
    },
    {
        "id": "9439bf886755dcf7",
        "type": "comment",
        "z": "06308f478fc88158",
        "name": "",
        "info": " In the inject node, you need to define an array as buffer. In this array, the second element defines the which register you want to change/update, the third element defines the value you want to change/update it to. For example, if you want to change/update the second byte in EEPROM to 50, just change the buffer payload to [0,1,50]. \n \n It works the same when you trying to read from the EEPROM. For example, if you wan to read the first byte, just send [0,0] to the \"i2c out\" node as the inject payload, if you want to read the second byte, just send [0,1].The only difference is that when reading, you need to write first, and then use a \"i2c in\" node to read.",
        "x": 100,
        "y": 40,
        "wires": []
    }
]